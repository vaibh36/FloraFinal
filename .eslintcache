[{"C:\\Users\\vaibh\\MyPlants\\flora\\src\\index.js":"1","C:\\Users\\vaibh\\MyPlants\\flora\\src\\App.js":"2","C:\\Users\\vaibh\\MyPlants\\flora\\src\\reportWebVitals.js":"3","C:\\Users\\vaibh\\MyPlants\\flora\\src\\Constants\\index.js":"4","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\Header.js":"5","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Home\\Home.js":"6","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Login\\Login.js":"7","C:\\Users\\vaibh\\MyPlants\\flora\\src\\firebase.js":"8","C:\\Users\\vaibh\\MyPlants\\flora\\src\\reducers\\reducer.js":"9","C:\\Users\\vaibh\\MyPlants\\flora\\src\\actions\\action.js":"10","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Checkout\\Checkout.js":"11","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\AllPlants\\AllPlants.js":"12","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Checkout\\Subtotal\\Subtotal.js":"13","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\Address.js":"14","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\Addresses\\Addresses.js":"15","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\AddressSelected\\AddressSelected.js":"16","C:\\Users\\vaibh\\MyPlants\\flora\\src\\utils\\index.js":"17","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\SearchedPlant\\SearchedPlant.js":"18","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\ForgotPassword\\ForgotPassword.js":"19","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\MobileVersion\\MobileVersion.js":"20","C:\\Users\\vaibh\\MyPlantsbackup\\src\\index.js":"21","C:\\Users\\vaibh\\MyPlantsbackup\\src\\reportWebVitals.js":"22","C:\\Users\\vaibh\\MyPlantsbackup\\src\\reducers\\reducer.js":"23","C:\\Users\\vaibh\\MyPlantsbackup\\src\\App.js":"24","C:\\Users\\vaibh\\MyPlantsbackup\\src\\firebase.js":"25","C:\\Users\\vaibh\\MyPlantsbackup\\src\\actions\\action.js":"26","C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\ForgotPassword\\ForgotPassword.js":"27","C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Login\\Login.js":"28","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Home\\Home.js":"29","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Checkout\\Checkout.js":"30","C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\SearchedPlant\\SearchedPlant.js":"31","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\Address.js":"32","C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\Header.js":"33","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\AllPlants\\AllPlants.js":"34","C:\\Users\\vaibh\\MyPlantsbackup\\src\\utils\\index.js":"35","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Checkout\\Subtotal\\Subtotal.js":"36","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\AddressSelected\\AddressSelected.js":"37","C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\Addresses\\Addresses.js":"38","C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\MobileVersion\\MobileVersion.js":"39","C:\\Users\\vaibh\\MyPlantsbackup\\src\\Constants\\index.js":"40"},{"size":895,"mtime":1612181342786,"results":"41","hashOfConfig":"42"},{"size":6269,"mtime":1614239553168,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":207,"mtime":1611407666532,"results":"45","hashOfConfig":"42"},{"size":6376,"mtime":1614235583246,"results":"46","hashOfConfig":"42"},{"size":4479,"mtime":1614246391360,"results":"47","hashOfConfig":"42"},{"size":3074,"mtime":1614148145100,"results":"48","hashOfConfig":"42"},{"size":445,"mtime":1611740006496,"results":"49","hashOfConfig":"42"},{"size":2195,"mtime":1613132772775,"results":"50","hashOfConfig":"42"},{"size":1161,"mtime":1613051153802,"results":"51","hashOfConfig":"42"},{"size":5688,"mtime":1613111732401,"results":"52","hashOfConfig":"42"},{"size":10029,"mtime":1614246108946,"results":"53","hashOfConfig":"42"},{"size":726,"mtime":1612599478817,"results":"54","hashOfConfig":"42"},{"size":6792,"mtime":1612770527693,"results":"55","hashOfConfig":"42"},{"size":2690,"mtime":1612770392244,"results":"56","hashOfConfig":"42"},{"size":617,"mtime":1612771772335,"results":"57","hashOfConfig":"42"},{"size":165,"mtime":1613110669388,"results":"58","hashOfConfig":"42"},{"size":7339,"mtime":1613973899362,"results":"59","hashOfConfig":"42"},{"size":1234,"mtime":1614159129462,"results":"60","hashOfConfig":"42"},{"size":1954,"mtime":1614248892209,"results":"61","hashOfConfig":"42"},{"size":895,"mtime":1612181342786,"results":"62","hashOfConfig":"63"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"63"},{"size":2195,"mtime":1613132772775,"results":"65","hashOfConfig":"63"},{"size":6513,"mtime":1614671431987,"results":"66","hashOfConfig":"63"},{"size":445,"mtime":1611740006496,"results":"67","hashOfConfig":"63"},{"size":1161,"mtime":1613051153802,"results":"68","hashOfConfig":"63"},{"size":1234,"mtime":1614159129462,"results":"69","hashOfConfig":"63"},{"size":3074,"mtime":1614148145100,"results":"70","hashOfConfig":"63"},{"size":4479,"mtime":1614246391360,"results":"71","hashOfConfig":"63"},{"size":5688,"mtime":1613111732401,"results":"72","hashOfConfig":"63"},{"size":7339,"mtime":1613973899362,"results":"73","hashOfConfig":"63"},{"size":6792,"mtime":1612770527693,"results":"74","hashOfConfig":"63"},{"size":6376,"mtime":1614665194599,"results":"75","hashOfConfig":"63"},{"size":10166,"mtime":1614673305983,"results":"76","hashOfConfig":"63"},{"size":165,"mtime":1613110669388,"results":"77","hashOfConfig":"63"},{"size":726,"mtime":1612599478817,"results":"78","hashOfConfig":"63"},{"size":617,"mtime":1612771772335,"results":"79","hashOfConfig":"63"},{"size":2690,"mtime":1612770392244,"results":"80","hashOfConfig":"63"},{"size":5478,"mtime":1614682019129,"results":"81","hashOfConfig":"63"},{"size":237,"mtime":1614331330998,"results":"82","hashOfConfig":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},"3y7gjw",{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ukicta",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vaibh\\MyPlants\\flora\\src\\index.js",["177"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/reducer\";\nimport Bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["178","179"],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\App.js",["180","181","182","183","184"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Home from './container/Home/Home';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport { connect, useDispatch } from \"react-redux\";\nimport { setUser, addItems } from './actions/action';\nimport { auth } from './firebase';\nimport Modal from 'react-modal';\nimport CartItems from './container/Checkout/Checkout';\nimport { BounceLoader } from 'react-spinners';\nimport PlantTypes from './container/AllPlants/AllPlants';\nimport leftImage from './assets/logo.jpg';\nimport Address from './container/Address/Address';\nimport SearchedPlant from './components/Header/SearchedPlant/SearchedPlant';\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword';\n\n\nModal.setAppElement('#root')\n\nfunction App(props) {\n  const [modal, setModal] = React.useState(false);\n  const [spinner, setSpinner] = React.useState(true);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const { setUsr, addItems } = props;\n    const unsubscribe = auth.onAuthStateChanged((authUser = {}) => {\n      console.log('Value of auth change is:-', authUser);\n      if (authUser) {\n        console.log('Auth user is1:-', authUser.email);\n        setUsr({\n          email: authUser.email,\n          uid: authUser.uid,\n        });\n        fetch('http://localhost:8085/flora/user/' + authUser.email)\n          .then((response) => {\n            console.log('Response is:-', response);\n            return response.json()\n          })\n          .then((data) => {\n            console.log('Final user data is:-', data);\n            const { user = {} } = data;\n            const { cart = {} } = user;\n            const { products = [] } = cart;\n\n            const myCart = products.reduce((acc, item) => {\n              return {\n                ...acc,\n                [item.name]: item,\n              };\n            }, {});\n            addItems(myCart)\n          })\n          .catch((err) => {\n            setSpinner(false)\n          })\n        setSpinner(false)\n      } else {\n        console.log('Not defined auth user:-', authUser);\n        setSpinner(false)\n      }\n    })\n    return () => {\n      setSpinner(false);\n      unsubscribe();\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    setSpinner(true)\n    const { setUsr } = props;\n\n\n    setModal(false)\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        console.log('Auth user is:-', authUser);\n        fetch('http://localhost:8085/flora/user/' + authUser.email)\n          .then((response) => {\n            console.log('Response is:-', response);\n            return response.json()\n          })\n          .then((data) => {\n            console.log('Final user data is:-', data);\n          })\n          .catch((err) => {\n\n          })\n\n        setUsr({\n          email: authUser.user.email,\n          uid: authUser.user.uid,\n        });\n        setSpinner(false);\n      })\n      .catch((e) => {\n        alert(e.message);\n        setSpinner(false)\n      });\n  };\n\n  const registerHandler = (email, password) => {\n    const { setUsr } = props;\n    setSpinner(true)\n    setModal(false)\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((auth) => {\n        const { user = {} } = auth;\n        setUsr({\n          email: user.email,\n          uid: user.uid,\n        });\n        console.log('Value of auth in register is:-', auth);\n        setSpinner(false)\n      })\n      .catch((e) => {\n        alert(e);\n        setSpinner(false)\n      });\n  };\n\n  const logoutHandler = () => {\n    setSpinner(true);\n    const { setUsr } = props;\n    auth.signOut();\n    setUsr({});\n    setSpinner(false)\n  }\n\n  const removeDropdown = () => {\n    console.log('Dropdown removed');\n    if (document.getElementById('results')) {\n      document.getElementById('results').classList.add('hide__dropdown')\n    }\n \n  }\n\n  const forgotPassword = () => {\n    setModal(false);\n    history.push('/forgotpassword')\n  }\n\n  const onScrollEvent = () => {\n    if (document.getElementById('mobile__header'))\n      document.getElementById('mobile__header').classList.remove('show_nav')\n  }\n\n  return (\n\n    !spinner ? (\n      <div style={{ overflow: 'scroll', height: '100vh' }} \n      onScroll={() => onScrollEvent()} \n      onClick={() => removeDropdown()} className=\"App\">\n        {\n          modal && <Login\n            modalIsOpen={modal}\n            setIsOpen={() => setModal(false)}\n            login={loginHandler}\n            register={registerHandler}\n            forgot={forgotPassword}\n          />\n        }\n        <Switch>\n          <Route exact path='/'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <Home />\n          </Route>\n          <Route exact path='/checkout'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <CartItems />\n          </Route>\n          <Route exact path='/allplants/:id'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <PlantTypes />\n          </Route>\n          <Route exact path='/address'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <Address />\n          </Route>\n\n          <Route exact path='/searchedplant/:id'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <SearchedPlant />\n          </Route>\n\n          <Route exact path='/forgotpassword'>\n            <Header setModalHandler={() => setModal(true)} logout={logoutHandler} />\n            <ForgotPassword />\n          </Route>\n\n        </Switch>\n      </div>) : <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <BounceLoader /></div>\n\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    myUser: state.get('user').toJS(),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUsr: usr => dispatch(setUser(usr)),\n    addItems: data => dispatch(addItems(data))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\reportWebVitals.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\Constants\\index.js",[],["185","186"],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\Header.js",["187","188","189","190","191","192","193"],"import React from 'react';\r\nimport './Header.css';\r\nimport * as constants from '../../Constants';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { clearCart, setUser } from '../../actions/action';\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from 'lodash.isempty';\r\nimport { auth } from '../../firebase';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport MobileVersion from './MobileVersion/MobileVersion';\r\n\r\nconst allPlants = ['Cactus', 'Caanta', 'Cillar', 'Lily', 'Lemon', 'Limca'];\r\n\r\nconst Header = ({ count, clearCart, myUser, setUsr, setModalHandler, logout }) => {\r\n    const history = useHistory();\r\n    const [user, updateUser] = React.useState('');\r\n    const [modal, setModal] = React.useState(false);\r\n    const [searchInput, setSearchInput] = React.useState('');\r\n    const [searchResults, setSearchResults] = React.useState([]);\r\n    const [hide, setHide] = React.useState(true);\r\n\r\n    const isDesktopOrLaptop = useMediaQuery({\r\n        query: '(min-device-width: 980px)'\r\n    })\r\n\r\n    console.log('Value for desktop is:-', isDesktopOrLaptop)\r\n\r\n    React.useEffect(() => {\r\n        updateUser(myUser.email)\r\n\r\n        return () => {\r\n            document.addEventListener('click', () => {\r\n                setSearchResults([])\r\n            })\r\n        }\r\n    }, [count]);\r\n\r\n    const logOut = () => {\r\n        logout();\r\n        clearCart()\r\n        history.push('/')\r\n    }\r\n\r\n    const shoppingCartHandler = () => {\r\n        isEmpty(myUser) ? history.push('/') : history.push('/checkout')\r\n    }\r\n\r\n\r\n    const onChangeHandler = (event) => {\r\n        setSearchInput(event.target.value);\r\n        console.log('Element entered is:-', event.target.value)\r\n        const results = allPlants.filter((val) => {\r\n            if (val.includes(event.target.value))\r\n                return val\r\n        });\r\n        console.log('Results searched are:-', results);\r\n        setSearchResults(event.target.value ? results : []);\r\n    }\r\n\r\n\r\n    const setSearchedValue = (val) => {\r\n        console.log('Value clicked is:-', val);\r\n        setSearchInput(val);\r\n        document.getElementById('results').classList.add('hide__dropdown');\r\n        history.push('/searchedplant/' + val)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { isDesktopOrLaptop ?\r\n                <div className=\"header__container\">\r\n                    <ul className=\"items\">\r\n                        <li><Link className=\"items__link\" onClick={() => history.push('/')}>{constants.Home}</Link></li>\r\n                        <li><Link className=\"items__link\" onClick={() => history.push('/allplants/all')}>{constants.Shop}</Link></li>\r\n                        <li>{constants.About}</li>\r\n                        <li>{constants.getinTouch}</li>\r\n\r\n                        {\r\n                            isEmpty(myUser) ?\r\n                                <li><Link className=\"items__link\" onClick={setModalHandler}>{constants.Login}</Link></li>\r\n                                :\r\n                                <li style={{ marginTop: '0px' }}>\r\n                                    <div style={{ marginTop: '5px' }}>\r\n                                        <p style={{ marginBottom: '0px', fontWeight: '100' }}>Signed in as:</p>\r\n                                        <span>{user}</span>\r\n                                        <div>\r\n                                            <Link className=\"items__link\" onClick={logOut} style={{ margin: '0px', fontWeight: '100' }}>Logout</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                        }\r\n                        <li>\r\n                            <div style={{ position: 'relative', display: 'flex' }}>\r\n                                <input\r\n                                    onChange={(event) => onChangeHandler(event)}\r\n                                    value={searchInput} autoComplete=\"off\"\r\n                                    className=\"search\" type=\"text\"\r\n                                    id=\"search\" placeholder=\"Search\"\r\n                                    style={{ borderRadius: '5px', border: 'none', width: '200px', height: '30px' }} />\r\n\r\n                                {\r\n                                    searchResults.length > 0 &&\r\n                                    (\r\n                                        <div id=\"results\" style={{\r\n                                            position: 'absolute', width: '100%', marginTop: '30px',\r\n                                            border: '1px solid gray', backgroundColor: 'mintcream', borderRadius: '10px'\r\n                                        }}\r\n\r\n                                        >\r\n                                            {\r\n                                                searchResults.map((val) => {\r\n                                                    return <p onClick={() => setSearchedValue(val)} style={{ color: 'black', margin: '0px', border: '1px dotted gray', cursor: 'pointer' }}>{val}</p>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n                                <div style={{ left: '210px', bottom: '10px', position: 'absolute' }} onClick={shoppingCartHandler}>\r\n                                    {!isEmpty(myUser) && <p style={{ margin: '0px' }}>{count}</p>}\r\n                                    <ShoppingCartIcon style={{ cursor: 'pointer', marginTop: '0px' }} />\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div> : <MobileVersion setModalHandler={setModalHandler} />\r\n            }\r\n        </React.Fragment>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.get('count'),\r\n        myUser: state.get('user').toJS(),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUsr: val => dispatch(setUser(val)),\r\n        clearCart: () => dispatch(clearCart()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Home\\Home.js",["194","195","196","197","198","199","200","201"],"import React from 'react';\r\nimport './Home.css';\r\nimport leftImage from '../../assets/leftbar.jpg';\r\nimport smallPlants from '../../assets/smallplants.jpg';\r\nimport mediumPlants from '../../assets/mediumplants.jpg';\r\nimport largePlants from '../../assets/largeplants.jpg';\r\nimport part3 from '../../assets/part3.jpg';\r\nimport concrete from '../../assets/handpainted.jpg';\r\nimport ceramic from '../../assets/handpaintedceremic.jpg';\r\nimport logo from '../../assets/logo.jpg';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"home\">\r\n           \r\n                <div className=\"part1\">\r\n                    <div style={{ flex: '40%' }} className=\"leftbar\">\r\n                        <img src={leftImage} />\r\n                    </div>\r\n                    <div style={{ flex: '40%' }} className=\"rightbar\">\r\n                        <div style={{ width: '250px', margin: 'auto' }}>\r\n                            <div>\r\n                            <img src={logo} style={{height: '100px', width: '50%'}} />\r\n                            </div>\r\n                            <p>\"If I see it in nature, I know it will work in a home\"</p>\r\n                            <p>-Miles Redd</p>\r\n                            <p>Lovely fresh plants delivered at your door step..</p>\r\n                            <p>Find your favourite plants and pair it with beautiful pots....</p>\r\n                            <button  onClick={() => this.props.history.push('/allplants/all')}>Shop All Plants</button>\r\n                            <button>Shop All Pots</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"part2\">\r\n                    <div style={{ position: 'relative' }}>\r\n                        <img className=\"imgsizing__part2\" src={smallPlants} />\r\n                        <button onClick={() => this.props.history.push('/allplants/small')} className=\"buttonplacement\">SMALL PLANTS</button>\r\n                    </div>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <img className=\"imgsizing__part2\" src={mediumPlants} />\r\n                        <button onClick={() => this.props.history.push('/allplants/medium')} className=\"buttonplacement\">MEDIUM PLANTS</button>\r\n                    </div>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <img className=\"imgsizing__part2\" src={largePlants} />\r\n                        <button onClick={() => this.props.history.push('/allplants/large')} className=\"buttonplacement\">LARGE PLANTS</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"parth3\">\r\n                    <div style={{ position: 'relative' }}>\r\n                        <img className=\"imgsizing\" src={concrete} />\r\n                        <button onClick={() => this.props.history.push('/allplants/concrete')} className=\"buttonplacement\">HANDPAINTED CONCRETE</button>\r\n                    </div>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <img className=\"imgsizing\" src={ceramic} />\r\n                        <button onClick={() => this.props.history.push('/allplants/ceremic')} className=\"buttonplacement\">HANDPAINTED CERMAIC</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"part4\">\r\n                    <div className=\"footer\" style={{paddingTop: '20px', display: 'flex'}}>\r\n                        <div style={{ flex: '33%' }}>\r\n                            <p>Location</p>\r\n                            <div style={{ width: '200px', margin: 'auto' }}>We are based\r\n                            in Faridabad and delivering in Delhi NCR region</div>\r\n                        </div>\r\n                        <div style={{ flex: '33%' }}>\r\n                            <p>CONTACT US</p>\r\n                            <p>fakeemail@gmail.com</p>\r\n                        </div>\r\n                        <div style={{ flex: '34%' }}>\r\n                            <p>Help</p>\r\n                            <p>Shipping</p>\r\n                            <p>Privacy Policy</p>\r\n                            <p>FAQ</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Home);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Login\\Login.js",["202","203","204"],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../../firebase\";\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from '../../actions/action';\r\nimport Modal from 'react-modal';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const { modalIsOpen, setIsOpen } = props;\r\n\r\n\r\n    const customStyles = {\r\n        overlay: {\r\n            backgroundColor: 'lightgray',\r\n            opacity: 0.9,\r\n\r\n        },\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '500px',\r\n            height: '500px',\r\n            backgroundColor: 'gray',\r\n            transition: 'opacity 0.5s ease-in'\r\n        }\r\n    };\r\n\r\n\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CSSTransition in={modalIsOpen} timeout={1000}>\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    onRequestClose={closeModal}\r\n                    contentLabel=\"Example Modal\"\r\n                    style={customStyles}\r\n                    closeTimeoutMS={1000}\r\n                >\r\n                    <div className=\"login__container\">\r\n                        <h1>Sign in</h1>\r\n                        <form>\r\n                            <h5>E-mail</h5>\r\n                            <input\r\n                                value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                type=\"email\"\r\n                            />\r\n                            <h5>Password</h5>\r\n                            <input\r\n                                value={password}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                                type=\"password\"\r\n                            />\r\n                            <button onClick={() => props.login(email, password)} type=\"submit\" className=\"login__signInButton\">\r\n                                Sign in\r\n                            </button>\r\n                        </form>\r\n                        <button onClick={() => props.register(email, password)} className=\"login__registerButton\">\r\n                            Create your Flora Account\r\n                        </button>\r\n                        <button onClick={() => props.forgot()} className=\"login__registerButton\">\r\n                            Forgot Password\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUsr: usr => dispatch(setUser(usr))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\firebase.js",["205"],"import firebase from 'firebase';\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD-DQ4FB-kL5kEBSCzs4QpTI_t_Tr9YiMA\",\r\n    authDomain: \"flora-3e4ba.firebaseapp.com\",\r\n    projectId: \"flora-3e4ba\",\r\n    storageBucket: \"flora-3e4ba.appspot.com\",\r\n    messagingSenderId: \"826796194369\",\r\n    appId: \"1:826796194369:web:bbb2a6e731c518ec1f64c0\",\r\n    measurementId: \"G-NK64JRC44E\"\r\n})\r\n\r\nconst auth = firebase.auth();\r\nexport {auth};","C:\\Users\\vaibh\\MyPlants\\flora\\src\\reducers\\reducer.js",["206","207","208"],"import { ADD_ITEM, REMOVE_ITEM, CLEAR_CART, SET_USER, LOGIN_MODAL, PLANT_TYPE } from \"../actions/action\";\r\nimport { fromJS, List as iList } from 'immutable';\r\nimport {countValues} from '../utils';\r\n\r\nconst initialState = fromJS({\r\n    user: {},\r\n    count: 0,\r\n    cart: {}\r\n});\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_ITEM: {       \r\n            console.log('Payload after deletion is:-', action.payload)     \r\n            return state.withMutations((stateMap)=>{\r\n                 stateMap.set('cart', fromJS(action.payload))\r\n                 .set('count', countValues(Object.keys(stateMap.get('cart').toJS()), stateMap.get('cart').toJS()))\r\n            })\r\n        };\r\n\r\n        // case REMOVE_ITEM: {\r\n        //     return state.withMutations((stateMap)=>{\r\n        //         console.log('Value in reducer is:-', action.payload)\r\n        //         return stateMap.update('items', (items) => {\r\n        //             if (items.getIn([Object.keys(action.payload)[0], 'quantity']) === 1) {\r\n        //                 return items.delete(Object.keys(action.payload)[0])\r\n        //             } else {\r\n        //                 return items.set(Object.keys(action.payload)[0], { ...action.payload[Object.keys(action.payload)[0]]})\r\n        //             }\r\n        //         })\r\n        //         .update('count', val => val-1)\r\n        //     })\r\n        // };\r\n\r\n        case CLEAR_CART: {\r\n            return state.update('cart', (cart) => {\r\n                return cart.clear()\r\n            }).set('count',0);\r\n        }\r\n\r\n        case SET_USER: {\r\n            console.log('Trying to add the user:-', action)\r\n            return state.set('user', fromJS(action.payload))\r\n        }\r\n\r\n        case LOGIN_MODAL: {\r\n            console.log('Trying to add the user:-', action)\r\n            return state.set('modal', true)\r\n        }\r\n\r\n        case PLANT_TYPE: {\r\n            console.log('Trying to add the plants data in reducer:-', action)\r\n            return state.set('plantSearchResult', fromJS(action.payload))\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","C:\\Users\\vaibh\\MyPlants\\flora\\src\\actions\\action.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Checkout\\Checkout.js",["209","210","211","212","213","214"],"import { Check } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Checkout.css';\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport isEmpty from 'lodash.isempty';\r\nimport { Map as iMap } from 'immutable';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { addItems, removeItem } from '../../actions/action';\r\nimport Subtotal from './Subtotal/Subtotal';\r\n\r\nconst CartItems = ({ count = 0, cart = iMap({}), user, addItems, removeItem }) => {\r\n    const history = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        console.log('Value in checkout is:-', cart, cart.toJS(), cart.size);\r\n        if (isEmpty(user.toJS())) {\r\n            history.push('/')\r\n        }\r\n    }, [])\r\n\r\n\r\n    const addToCart = (plant) => {\r\n        console.log('Plant to be added is:-', plant);\r\n        const { email = '' } = user.toJS();\r\n        fetch('http://localhost:8085/flora/user/operation/' + email + '/' + 'ADDING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plant\r\n            })\r\n        })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                return response.json()\r\n            })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                      ...acc,\r\n                      [item.name]: item,\r\n                    };\r\n                  }, {});\r\n                  addItems(myCart)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const removeFromCart = (plant) => {\r\n        console.log('Plant to be removed is:-', plant);\r\n        const { email = '' } = user.toJS();\r\n        const item = {\r\n            [plant.plantId]: plant\r\n        }\r\n        fetch('http://localhost:8085/flora/user/operation/' + email + '/' + 'REMOVING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plant\r\n            })\r\n\r\n        })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                return response.json()\r\n            })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                console.log('Response is:-', response);\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                      ...acc,\r\n                      [item.name]: item,\r\n                    };\r\n                  }, {});\r\n                  addItems(myCart)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img\r\n                    className='checkout__ad'\r\n                    src='https://images-na.ssl-images-amazon.com/images/G/01/AmazonServices/Site/US/Product/FBA/Outlet/Merchandising/AMZN_OutletDeals_Template_March_1500x200_wh_EN.jpg'\r\n                    alt='outlet ad'\r\n                />\r\n                {\r\n                    count === 0 ? <h2>You do not have any item to checkout</h2> :\r\n                        (\r\n                            <div style={{ display: 'flex' }}>\r\n\r\n                                <div style={{ display: 'flex', flex: '80%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', border: '1px solid gray', backgroundColor: 'lightgray' }}>\r\n                                    {\r\n                                        Object.values(cart.toJS()).map((item) => {\r\n                                            return (\r\n                                                <div style={{ margin: '20px 20px' }}>\r\n                                                    <img src={item.imageUrl} />\r\n                                                    <p>{item.name}: <span>\r\n                                                        <span onClick={() => addToCart(item)}> <AddIcon style={{ cursor: 'pointer' }} /></span>\r\n                                                        {item.quantity}<span onClick={() => removeFromCart(item)}><RemoveIcon style={{ cursor: 'pointer' }} /></span></span></p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <div style={{ flex: '20%', border: '1px solid gray', height: '200px', margin: '0px 20px', backgroundColor: 'lightgray' }}>This is the subtotal part\r\n                                <Subtotal items={cart} />\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.get('count'),\r\n        cart: state.get('cart'),\r\n        user: state.get('user'),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItems: (item) => dispatch(addItems(item)),\r\n        removeItem: (item) => dispatch(removeItem(item))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItems);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\AllPlants\\AllPlants.js",["215","216","217","218","219"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { setPlantType, addItems } from '../../actions/action';\r\nimport { List as iList, Map as iMap } from 'immutable';\r\nimport chunk from 'lodash.chunk';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\nimport './AllPlants.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport isEmpty from 'lodash.isempty';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nclass AllPlants extends React.Component {\r\n\r\n\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        description: '',\r\n        backdrop: true,\r\n        imageUrl: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Props are:-', this.props.match.params.id)\r\n        fetch('http://localhost:8085/flora/allPlants/' + this.props.match.params.id)\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                console.log('Final data is:-', data.plants);\r\n                this.props.setPlants(data.plants);\r\n            })\r\n            .catch((err) => {\r\n\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPlants([]);\r\n    }\r\n\r\n\r\n    addToCart = (plant) => {\r\n        const { myUser = {}, addItems } = this.props;\r\n        const item = {\r\n            [plant._id]: plant\r\n        }\r\n        console.log('Item added:-', item);\r\n        fetch('http://localhost:8085/flora/user/operation/' + myUser.email + '/' + 'ADDING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plant\r\n            })\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                        ...acc,\r\n                        [item.name]: item,\r\n                    };\r\n                }, {});\r\n\r\n                console.log('My cart is:-', myCart)\r\n                addItems(myCart)\r\n            })\r\n    }\r\n\r\n    showPlantData = (plant) => {\r\n        console.log('Plant clicked is:-', plant)\r\n        this.setState({\r\n            modal: true,\r\n            name: plant.name,\r\n            description: plant.description,\r\n            imageUrl: plant.imageUrl\r\n        })\r\n    }\r\n\r\n    removeFromCart = (plant) => {\r\n        const { cart = iMap({}), myUser, addItems } = this.props;\r\n        const plantInfo = cart.get(plant.name);\r\n        const { email } = myUser\r\n        if (isEmpty(plantInfo)) {\r\n            console.log('We need to stop')\r\n            return\r\n        } else {\r\n            console.log('We need to call the api now')\r\n        }\r\n\r\n        console.log('Plant info that requires changes is:-', plantInfo.toJS());\r\n        fetch('http://localhost:8085/flora/user/operation/' + email + '/' + 'REMOVING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plantInfo.toJS()\r\n            })\r\n        })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                return response.json()\r\n            })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                        ...acc,\r\n                        [item.name]: item,\r\n                    };\r\n                }, {});\r\n                addItems(myCart)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { modal, name, description, imageUrl } = this.state;\r\n        const { plantsData = iList([]), myUser = {}, cart= iMap({}) } = this.props;\r\n        const rows = chunk(plantsData.toJS(), 2);\r\n        console.log('Rows are:-', rows, rows.length);\r\n        return (\r\n            !modal ? (\r\n                rows.length > 0 ? (\r\n                    <div className=\"plants__view\">\r\n                        {\r\n                            rows.map((row) => (\r\n                                <div className=\"allplants\" style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                    {\r\n                                        row.map((plant) => (\r\n                                            <div className=\"card__external\">\r\n                                            <Card style={{height: '100%', zIndex: '-1'}}>\r\n                                                <Card.Img src={plant.imageUrl} className=\"img_sizing\"></Card.Img>\r\n                                                <Card.Body style={{ position: 'relative' }}>\r\n                                                    <Card.Title>{plant.name}</Card.Title>\r\n                                                    <div><StarIcon style={{\r\n                                                        cursor: 'pointer', left: '10px',\r\n                                                        position: 'absolute', top: '5px', color: 'gold'\r\n                                                    }} />\r\n                                                    </div>\r\n                                                    <div onClick={() => this.showPlantData(plant)}>\r\n                                                        <span style={{\r\n                                                            cursor: 'pointer', left: '65%',\r\n                                                            position: 'absolute', top: '5px'\r\n                                                        }}>Know more</span>\r\n                                                        <InfoIcon style={{\r\n                                                            cursor: 'pointer', left: '88%',\r\n                                                            position: 'absolute', top: '5px'\r\n                                                        }} />\r\n                                                    </div>\r\n                                                    <Card.Text style={{ position: 'absolute', top: '50px', left: '10px' }}><i class=\"fa fa-inr\"></i><span style={{ fontWeight: '700' }}>{plant.price}</span></Card.Text>\r\n                                                    <Card.Text style={{ position: 'absolute', top: '40px', left: '60%' }}><span style={{ fontSize: '10px' }}>Quantity</span></Card.Text>\r\n                                                    {!isEmpty(myUser) &&\r\n                                                        <div style={{\r\n                                                            cursor: 'pointer', left: '60%',\r\n                                                            position: 'absolute', bottom: '5px',\r\n                                                            display: 'flex',\r\n                                                        }}>\r\n                                                            <div style={{ border: '1px solid gray', borderRadius: '10px', marginRight: '10px' }}>\r\n                                                                <span onClick={() => this.addToCart(plant)} style={{ borderRight: '1px gray solid', padding: '8px', paddingTop: '2px', paddingBottom: '2px' }}>+</span>\r\n                                                                <span style={{ padding: '15px' }}>{cart.getIn([plant.name, 'quantity']) || 0}</span>\r\n                                                                <span onClick={() => this.removeFromCart(plant)} style={{ borderLeft: '1px gray solid', padding: '8px', paddingTop: '2px', paddingBottom: '2px' }}>-</span>\r\n                                                            </div>\r\n                                                            <button style={{ width: '100%', height: '30px', borderRadius: '10px', fontSize: '10px' }}>Add to Cart</button>\r\n                                                        </div>\r\n                                                    }\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>) : <p>No data found</p>\r\n            ) :\r\n                <Modal size='lg' centered show={modal} onHide={() => this.setState({ modal: false })}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>{name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <div style={{ marginRight: '20px' }}><img src={imageUrl} /></div>\r\n                            <div style={{ marginTop: '45px' }}>{description}</div>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        plantsData: state.get('plantSearchResult'),\r\n        myUser: state.get('user').toJS(),\r\n        cart: state.get('cart'),\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlants: res => dispatch(setPlantType(res)),\r\n        addItems: (item) => dispatch(addItems(item))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllPlants));","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Checkout\\Subtotal\\Subtotal.js",["220"],"import React from 'react';\r\nimport {Map as iMap} from 'immutable';\r\nimport {withRouter, useHistory} from 'react-router-dom'\r\n\r\nconst Subtotal = React.memo(({items = iMap({})})=>{\r\n    const history = useHistory();\r\n    const [total, setTotal] = React.useState(null)\r\n    React.useEffect(()=>{\r\n        setTotal(Object.keys(items.toJS()).reduce((acc ,key)=>{\r\n           return acc = acc + (items.toJS()[key].price * items.toJS()[key].quantity)\r\n        }, 0));\r\n    })\r\n    return(\r\n        <div style={{marginTop: '20px'}}>\r\n            <p><i class=\"fa fa-inr\"></i>{total}</p>\r\n            <button onClick={() => history.push('/address')}>Checkout</button>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default withRouter(Subtotal);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\Address.js",["221"],"import { Map as iMap } from 'immutable';\r\nimport React from 'react';\r\nimport { Accordion, Button, Card } from 'react-bootstrap';\r\nimport './Address.css';\r\nimport { connect } from \"react-redux\";\r\nimport Addresses from './Addresses/Addresses';\r\nimport AddressSelected from './AddressSelected/AddressSelected'\r\n\r\nclass Address extends React.Component {\r\n\r\n    state = {\r\n        address: {\r\n            id: '',\r\n            hno: '',\r\n            sector: '',\r\n            city: '',\r\n            state: ''\r\n        },\r\n        existingAddresses: [],\r\n        addressSelected: false\r\n    }\r\n\r\n    getAddresses = async () => {\r\n        const { email = '' } = this.props.user.toJS();\r\n        fetch('http://localhost:8085/flora/user/addresses/' + email)\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n            .then((res) => {\r\n                const { user = {} } = res;\r\n                const { address = [] } = user;\r\n                console.log('Addresses in mount are:-', address);\r\n                this.setState({\r\n                    existingAddresses: address.map(({ hno, sector, city, state, _id }) => {\r\n                        return {\r\n                            hno, sector, city, state, id: _id\r\n                        }\r\n                    }),\r\n                    address: {}\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    removeAddress = (addressId) => {\r\n        const { email = '' } = this.props.user.toJS();\r\n        console.log('Address to be removed is:-', addressId);\r\n        fetch('http://localhost:8085/flora/user/addresses/delete/' + addressId + '/' + email, {\r\n            method: 'DELETE'\r\n        })\r\n            .then((res) => {\r\n                console.log('Response after deleting is:-', res);\r\n                return res.json()\r\n            })\r\n            .then(() => {\r\n                this.getAddresses();\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddresses();\r\n    }\r\n\r\n    onChangeHandler = (event, id) => {\r\n        const { address = {} } = this.state;\r\n        this.setState({\r\n            address: { ...address, [id]: event.target.value }\r\n        })\r\n\r\n    }\r\n\r\n    addAddress = () => {\r\n        const { address = {} } = this.state;\r\n        const { user = iMap({}) } = this.props;\r\n        const { email = '' } = user.toJS();\r\n\r\n        fetch('http://localhost:8085/flora/user/address/' + email, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                address\r\n            })\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then(() => {\r\n                this.getAddresses();\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            address: {}\r\n        })\r\n    }\r\n\r\n    submitHandler = (id,obj) => {\r\n        console.log('Value that has been seleced is:-', id,obj);\r\n        this.setState({\r\n            addressSelected: true,\r\n            address: {...obj}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { address = {}, existingAddresses = [], addressSelected } = this.state;\r\n        const { hno = '', sector = '', city = '', state = '' } = address;\r\n        const status = Object.values(address).map(val => val).includes('')\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    !addressSelected ? (\r\n                        <div style={{ display: 'flex', marginTop: '100px', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\r\n                            <Addresses\r\n                                existingAddresses={existingAddresses}\r\n                                removeAddress={this.removeAddress}\r\n                                submitHandler={this.submitHandler} />\r\n                            <Accordion style={{ width: '400px', backgroundColor: '#fff', cursor: 'pointer' }}>\r\n                                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n                                    Want to add a new Address ?\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        <div style={{ textAlign: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <label for=\"hno\">House Number:</label>\r\n                                            <div style={{ textAlign: 'center' }}><input value={hno} onChange={(event) => this.onChangeHandler(event, 'hno')} type=\"text\" id=\"hno\" /></div>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <label for=\"sector\">Sector:</label>\r\n                                            <div style={{ textAlign: 'center' }}><input onChange={(event) => this.onChangeHandler(event, 'sector')} value={sector} type=\"text\" id=\"sector\" /></div>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <label for=\"city\">City:</label>\r\n                                            <div style={{ textAlign: 'center' }}><input onChange={(event) => this.onChangeHandler(event, 'city')} value={city} type=\"text\" id=\"city\" /></div>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <label for=\"state\">State:</label>\r\n                                            <div style={{ textAlign: 'center' }}><input onChange={(event) => this.onChangeHandler(event, 'state')} value={state} type=\"text\" id=\"state\" /></div>\r\n                                        </div>\r\n                                        <div onClick={() => this.addAddress()} style={{ textAlign: 'center' }}>\r\n                                            <button disabled={status} style={{ width: '50%' }}>Add Address</button>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Accordion>\r\n                        </div>) : <AddressSelected address={address} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.get('user'),\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Address);","C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\Addresses\\Addresses.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\container\\Address\\AddressSelected\\AddressSelected.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\utils\\index.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\SearchedPlant\\SearchedPlant.js",["222","223","224"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from 'lodash.isempty';\r\nimport { Card } from 'react-bootstrap';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { Map as iMap } from 'immutable';\r\nimport { addItems } from '../../../actions/action';\r\n\r\nclass SearchedPlant extends React.Component {\r\n\r\n\r\n    state = {\r\n        plant: {},\r\n        modal: false,\r\n        name: '',\r\n        description: '',\r\n        backdrop: true,\r\n        imageUrl: ''\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        const { myUser = {} } = this.props;\r\n        const { email = '' } = myUser\r\n        console.log('Url value is:-', this.props.match.params.id);\r\n        const response = await fetch(`http://localhost:8085/flora/user/search/` + this.props.match.params.id);\r\n        const res = await response.json();\r\n        const { plant = {} } = res;\r\n        this.setState({\r\n            plant\r\n        })\r\n\r\n    }\r\n\r\n    showPlantData = (plant) => {\r\n        console.log('Plant clicked is:-', plant)\r\n        this.setState({\r\n            modal: true,\r\n            name: plant.name,\r\n            description: plant.description,\r\n            imageUrl: plant.imageUrl\r\n        })\r\n    }\r\n\r\n    addToCart = (plant) => {\r\n        const { myUser = {}, addItems } = this.props;\r\n        const item = {\r\n            [plant._id]: plant\r\n        }\r\n        console.log('Item added:-', item);\r\n        fetch('http://localhost:8085/flora/user/operation/' + myUser.email + '/' + 'ADDING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plant\r\n            })\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((response) => {\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                        ...acc,\r\n                        [item.name]: item,\r\n                    };\r\n                }, {});\r\n\r\n                console.log('My cart is:-', myCart)\r\n                addItems(myCart)\r\n            })\r\n    }\r\n\r\n\r\n    removeFromCart = (plant) => {\r\n        const { cart = iMap({}), myUser, addItems } = this.props;\r\n        const plantInfo = cart.get(plant.name);\r\n        const { email } = myUser\r\n        if (isEmpty(plantInfo)) {\r\n            console.log('We need to stop')\r\n            return\r\n        } else {\r\n            console.log('We need to call the api now')\r\n        }\r\n        console.log('Plant info that requires changes is:-', plantInfo.toJS());\r\n        fetch('http://localhost:8085/flora/user/operation/' + email + '/' + 'REMOVING', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: plantInfo.toJS()\r\n            })\r\n        })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                return response.json()\r\n            })\r\n            .then((response) => {\r\n                console.log('Response is:-', response);\r\n                const { cart = {} } = response;\r\n                const { products = [] } = cart;\r\n                const myCart = products.reduce((acc, item) => {\r\n                    return {\r\n                        ...acc,\r\n                        [item.name]: item,\r\n                    };\r\n                }, {});\r\n                addItems(myCart)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { plant = {} } = this.state;\r\n        const { myUser = {}, cart } = this.props;\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\r\n            { !isEmpty(plant) ?\r\n                <Card style={{\r\n                    width: '440px', marginTop: '10px',\r\n                    marginBottom: '20px', boxShadow: '15px 10px 8px gray', height: '400px'\r\n                }}>\r\n                    <Card.Img src={plant.imageUrl} style={{ height: '300px' }}></Card.Img>\r\n                    <Card.Body style={{ position: 'relative' }}>\r\n                        <Card.Title>{plant.name}</Card.Title>\r\n                        <div><StarIcon style={{\r\n                            cursor: 'pointer', left: '10px',\r\n                            position: 'absolute', top: '5px', color: 'gold'\r\n                        }} />\r\n                        </div>\r\n                        <div onClick={() => this.showPlantData(plant)}>\r\n                            <span style={{\r\n                                cursor: 'pointer', left: '70%',\r\n                                position: 'absolute', top: '5px'\r\n                            }}>Know more</span>\r\n                            <InfoIcon style={{\r\n                                cursor: 'pointer', left: '90%',\r\n                                position: 'absolute', top: '5px'\r\n                            }} />\r\n                        </div>\r\n                        <Card.Text style={{ position: 'absolute', top: '50px', left: '10px' }}><i class=\"fa fa-inr\"></i><span style={{ fontWeight: '700' }}>{plant.price}</span></Card.Text>\r\n                        <Card.Text style={{ position: 'absolute', top: '40px', left: '60%' }}><span style={{ fontSize: '10px' }}>Quantity</span></Card.Text>\r\n                        {!isEmpty(myUser) &&\r\n                            <div style={{\r\n                                cursor: 'pointer', left: '60%',\r\n                                position: 'absolute', bottom: '5px',\r\n                                display: 'flex',\r\n                            }}>\r\n                                <div style={{ border: '1px solid gray', borderRadius: '10px', marginRight: '10px' }}>\r\n                                    <span onClick={() => this.addToCart(plant)} style={{ borderRight: '1px gray solid', padding: '8px', paddingTop: '2px', paddingBottom: '2px' }}>+</span>\r\n                                    <span style={{ padding: '15px' }}>{cart.getIn([plant.name, 'quantity']) || 0}</span>\r\n                                    <span onClick={() => this.removeFromCart(plant)} style={{ borderLeft: '1px gray solid', padding: '8px', paddingTop: '2px', paddingBottom: '2px' }}>-</span>\r\n                                </div>\r\n                                <button style={{ width: '100%', height: '30px', borderRadius: '10px', fontSize: '10px' }}>Add to Cart</button>\r\n                            </div>\r\n                        }\r\n                    </Card.Body>\r\n                </Card> : <p>No such plant exist</p>\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.get('count'),\r\n        myUser: state.get('user').toJS(),\r\n        cart: state.get('cart'),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItems: (item) => dispatch(addItems(item))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchedPlant));","C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\vaibh\\MyPlants\\flora\\src\\components\\Header\\MobileVersion\\MobileVersion.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\index.js",["225"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\reportWebVitals.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\reducers\\reducer.js",["226","227","228"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\App.js",["229","230","231","232","233"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\firebase.js",["234"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\actions\\action.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Login\\Login.js",["235","236","237"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Home\\Home.js",["238","239","240","241","242","243","244","245"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Checkout\\Checkout.js",["246","247","248","249","250","251"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\SearchedPlant\\SearchedPlant.js",["252","253","254"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\Address.js",["255"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\Header.js",["256","257","258","259","260","261","262"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\AllPlants\\AllPlants.js",["263","264","265","266","267","268"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\utils\\index.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Checkout\\Subtotal\\Subtotal.js",["269"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\AddressSelected\\AddressSelected.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\container\\Address\\Addresses\\Addresses.js",[],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\components\\Header\\MobileVersion\\MobileVersion.js",["270"],"C:\\Users\\vaibh\\MyPlantsbackup\\src\\Constants\\index.js",[],{"ruleId":"271","severity":1,"message":"272","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":17},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"271","severity":1,"message":"279","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":12},{"ruleId":"271","severity":1,"message":"280","line":7,"column":27,"nodeType":"273","messageId":"274","endLine":7,"endColumn":33},{"ruleId":"271","severity":1,"message":"281","line":8,"column":19,"nodeType":"273","messageId":"274","endLine":8,"endColumn":30},{"ruleId":"271","severity":1,"message":"282","line":15,"column":8,"nodeType":"273","messageId":"274","endLine":15,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":70,"column":6,"nodeType":"285","endLine":70,"endColumn":8,"suggestions":"286"},{"ruleId":"275","replacedBy":"287"},{"ruleId":"277","replacedBy":"288"},{"ruleId":"271","severity":1,"message":"289","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"271","severity":1,"message":"290","line":18,"column":12,"nodeType":"273","messageId":"274","endLine":18,"endColumn":17},{"ruleId":"271","severity":1,"message":"291","line":18,"column":19,"nodeType":"273","messageId":"274","endLine":18,"endColumn":27},{"ruleId":"271","severity":1,"message":"292","line":21,"column":12,"nodeType":"273","messageId":"274","endLine":21,"endColumn":16},{"ruleId":"271","severity":1,"message":"293","line":21,"column":18,"nodeType":"273","messageId":"274","endLine":21,"endColumn":25},{"ruleId":"283","severity":1,"message":"294","line":37,"column":8,"nodeType":"285","endLine":37,"endColumn":15,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":53,"column":48,"nodeType":"298","messageId":"299","endLine":53,"endColumn":50},{"ruleId":"271","severity":1,"message":"300","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":22,"column":25,"nodeType":"303","endLine":22,"endColumn":48},{"ruleId":"301","severity":1,"message":"302","line":27,"column":29,"nodeType":"303","endLine":27,"endColumn":87},{"ruleId":"301","severity":1,"message":"302","line":41,"column":25,"nodeType":"303","endLine":41,"endColumn":79},{"ruleId":"301","severity":1,"message":"302","line":45,"column":25,"nodeType":"303","endLine":45,"endColumn":80},{"ruleId":"301","severity":1,"message":"302","line":49,"column":25,"nodeType":"303","endLine":49,"endColumn":79},{"ruleId":"301","severity":1,"message":"302","line":55,"column":25,"nodeType":"303","endLine":55,"endColumn":69},{"ruleId":"301","severity":1,"message":"302","line":59,"column":25,"nodeType":"303","endLine":59,"endColumn":68},{"ruleId":"271","severity":1,"message":"304","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"289","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":12,"column":11,"nodeType":"273","messageId":"274","endLine":12,"endColumn":18},{"ruleId":"271","severity":1,"message":"306","line":2,"column":7,"nodeType":"273","messageId":"274","endLine":2,"endColumn":18},{"ruleId":"271","severity":1,"message":"307","line":1,"column":20,"nodeType":"273","messageId":"274","endLine":1,"endColumn":31},{"ruleId":"271","severity":1,"message":"308","line":2,"column":26,"nodeType":"273","messageId":"274","endLine":2,"endColumn":31},{"ruleId":"309","severity":1,"message":"310","line":14,"column":24,"nodeType":"311","messageId":"312","endLine":20,"endColumn":10},{"ruleId":"271","severity":1,"message":"313","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":15},{"ruleId":"283","severity":1,"message":"314","line":21,"column":8,"nodeType":"285","endLine":21,"endColumn":10,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":27,"column":75,"nodeType":"318","messageId":"319","endLine":27,"endColumn":76},{"ruleId":"271","severity":1,"message":"320","line":59,"column":15,"nodeType":"273","messageId":"274","endLine":59,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":62,"column":75,"nodeType":"318","messageId":"319","endLine":62,"endColumn":76},{"ruleId":"301","severity":1,"message":"302","line":109,"column":53,"nodeType":"303","endLine":109,"endColumn":80},{"ruleId":"271","severity":1,"message":"321","line":7,"column":16,"nodeType":"273","messageId":"274","endLine":7,"endColumn":22},{"ruleId":"271","severity":1,"message":"322","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":53,"column":82,"nodeType":"318","messageId":"319","endLine":53,"endColumn":83},{"ruleId":"316","severity":1,"message":"317","line":103,"column":75,"nodeType":"318","messageId":"319","endLine":103,"endColumn":76},{"ruleId":"301","severity":1,"message":"302","line":197,"column":66,"nodeType":"303","endLine":197,"endColumn":88},{"ruleId":"283","severity":1,"message":"323","line":8,"column":5,"nodeType":"324","endLine":8,"endColumn":20,"suggestions":"325"},{"ruleId":"271","severity":1,"message":"321","line":3,"column":21,"nodeType":"273","messageId":"274","endLine":3,"endColumn":27},{"ruleId":"271","severity":1,"message":"326","line":26,"column":17,"nodeType":"273","messageId":"274","endLine":26,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":53,"column":82,"nodeType":"318","messageId":"319","endLine":53,"endColumn":83},{"ruleId":"316","severity":1,"message":"317","line":92,"column":75,"nodeType":"318","messageId":"319","endLine":92,"endColumn":76},{"ruleId":"271","severity":1,"message":"272","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":17},{"ruleId":"271","severity":1,"message":"307","line":1,"column":20,"nodeType":"273","messageId":"274","endLine":1,"endColumn":31},{"ruleId":"271","severity":1,"message":"308","line":2,"column":26,"nodeType":"273","messageId":"274","endLine":2,"endColumn":31},{"ruleId":"309","severity":1,"message":"310","line":14,"column":24,"nodeType":"311","messageId":"312","endLine":20,"endColumn":10},{"ruleId":"271","severity":1,"message":"279","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":12},{"ruleId":"271","severity":1,"message":"280","line":7,"column":27,"nodeType":"273","messageId":"274","endLine":7,"endColumn":33},{"ruleId":"271","severity":1,"message":"281","line":8,"column":19,"nodeType":"273","messageId":"274","endLine":8,"endColumn":30},{"ruleId":"271","severity":1,"message":"282","line":15,"column":8,"nodeType":"273","messageId":"274","endLine":15,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":70,"column":6,"nodeType":"285","endLine":70,"endColumn":8,"suggestions":"327"},{"ruleId":"271","severity":1,"message":"306","line":2,"column":7,"nodeType":"273","messageId":"274","endLine":2,"endColumn":18},{"ruleId":"271","severity":1,"message":"304","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"289","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":12,"column":11,"nodeType":"273","messageId":"274","endLine":12,"endColumn":18},{"ruleId":"271","severity":1,"message":"300","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":22,"column":25,"nodeType":"303","endLine":22,"endColumn":48},{"ruleId":"301","severity":1,"message":"302","line":27,"column":29,"nodeType":"303","endLine":27,"endColumn":87},{"ruleId":"301","severity":1,"message":"302","line":41,"column":25,"nodeType":"303","endLine":41,"endColumn":79},{"ruleId":"301","severity":1,"message":"302","line":45,"column":25,"nodeType":"303","endLine":45,"endColumn":80},{"ruleId":"301","severity":1,"message":"302","line":49,"column":25,"nodeType":"303","endLine":49,"endColumn":79},{"ruleId":"301","severity":1,"message":"302","line":55,"column":25,"nodeType":"303","endLine":55,"endColumn":69},{"ruleId":"301","severity":1,"message":"302","line":59,"column":25,"nodeType":"303","endLine":59,"endColumn":68},{"ruleId":"271","severity":1,"message":"313","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":15},{"ruleId":"283","severity":1,"message":"314","line":21,"column":8,"nodeType":"285","endLine":21,"endColumn":10,"suggestions":"328"},{"ruleId":"316","severity":1,"message":"317","line":27,"column":75,"nodeType":"318","messageId":"319","endLine":27,"endColumn":76},{"ruleId":"271","severity":1,"message":"320","line":59,"column":15,"nodeType":"273","messageId":"274","endLine":59,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":62,"column":75,"nodeType":"318","messageId":"319","endLine":62,"endColumn":76},{"ruleId":"301","severity":1,"message":"302","line":109,"column":53,"nodeType":"303","endLine":109,"endColumn":80},{"ruleId":"271","severity":1,"message":"326","line":26,"column":17,"nodeType":"273","messageId":"274","endLine":26,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":53,"column":82,"nodeType":"318","messageId":"319","endLine":53,"endColumn":83},{"ruleId":"316","severity":1,"message":"317","line":92,"column":75,"nodeType":"318","messageId":"319","endLine":92,"endColumn":76},{"ruleId":"271","severity":1,"message":"321","line":3,"column":21,"nodeType":"273","messageId":"274","endLine":3,"endColumn":27},{"ruleId":"271","severity":1,"message":"289","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"271","severity":1,"message":"290","line":18,"column":12,"nodeType":"273","messageId":"274","endLine":18,"endColumn":17},{"ruleId":"271","severity":1,"message":"291","line":18,"column":19,"nodeType":"273","messageId":"274","endLine":18,"endColumn":27},{"ruleId":"271","severity":1,"message":"292","line":21,"column":12,"nodeType":"273","messageId":"274","endLine":21,"endColumn":16},{"ruleId":"271","severity":1,"message":"293","line":21,"column":18,"nodeType":"273","messageId":"274","endLine":21,"endColumn":25},{"ruleId":"283","severity":1,"message":"294","line":37,"column":8,"nodeType":"285","endLine":37,"endColumn":15,"suggestions":"329"},{"ruleId":"296","severity":1,"message":"297","line":53,"column":48,"nodeType":"298","messageId":"299","endLine":53,"endColumn":50},{"ruleId":"271","severity":1,"message":"321","line":7,"column":16,"nodeType":"273","messageId":"274","endLine":7,"endColumn":22},{"ruleId":"271","severity":1,"message":"322","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":15},{"ruleId":"271","severity":1,"message":"320","line":54,"column":15,"nodeType":"273","messageId":"274","endLine":54,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":57,"column":82,"nodeType":"318","messageId":"319","endLine":57,"endColumn":83},{"ruleId":"316","severity":1,"message":"317","line":104,"column":75,"nodeType":"318","messageId":"319","endLine":104,"endColumn":76},{"ruleId":"301","severity":1,"message":"302","line":198,"column":66,"nodeType":"303","endLine":198,"endColumn":88},{"ruleId":"283","severity":1,"message":"323","line":8,"column":5,"nodeType":"324","endLine":8,"endColumn":20,"suggestions":"330"},{"ruleId":"296","severity":1,"message":"297","line":30,"column":48,"nodeType":"298","messageId":"299","endLine":30,"endColumn":50},"no-unused-vars","'Bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["331"],"no-negated-in-lhs",["332"],"'logo' is defined but never used.","'Router' is defined but never used.","'useDispatch' is defined but never used.","'leftImage' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["333"],["331"],["332"],"'auth' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'myUser.email'. Either include it or remove the dependency array. If 'updateUser' needs the current value of 'myUser.email', you can also switch to useReducer instead of useState and read 'myUser.email' in the reducer.",["334"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'part3' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'history' is assigned a value but never used.","'firebaseApp' is assigned a value but never used.","'REMOVE_ITEM' is defined but never used.","'iList' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Check' is defined but never used.","React Hook React.useEffect has missing dependencies: 'cart', 'history', and 'user'. Either include them or remove the dependency array.",["335"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'item' is assigned a value but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [items] as a second argument to the useEffect Hook.","MemberExpression",["336"],"'email' is assigned a value but never used.",["337"],["338"],["339"],["340"],"no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"341","fix":"349"},{"desc":"345","fix":"350"},{"desc":"343","fix":"351"},{"desc":"347","fix":"352"},"Update the dependencies array to be: [props]",{"range":"353","text":"354"},"Update the dependencies array to be: [count, myUser.email]",{"range":"355","text":"356"},"Update the dependencies array to be: [cart, history, user]",{"range":"357","text":"358"},"Add dependencies array: [items]",{"range":"359","text":"360"},{"range":"361","text":"354"},{"range":"362","text":"358"},{"range":"363","text":"356"},{"range":"364","text":"360"},[2350,2352],"[props]",[1380,1387],"[count, myUser.email]",[792,794],"[cart, history, user]",[467,467],", [items]",[2350,2352],[792,794],[1380,1387],[467,467]]